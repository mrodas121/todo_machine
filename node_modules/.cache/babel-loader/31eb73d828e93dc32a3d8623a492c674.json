{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Nueva carpeta\\\\todo_machine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport TodoCounter from './components/TodoCounter';\nimport TodoSearch from './components/TodoSearch';\nimport TodoList from './components/TodoList';\nimport TodoItem from './components/TodoItem';\nimport CreateTodoButton from './components/CreateTodoButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTodos = [{\n  text: 'Hacer la tarea',\n  completed: true\n}, {\n  text: 'Estudiar para examen',\n  completed: false\n}, {\n  text: 'Trabajar',\n  completed: false\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(defaultTodos);\n  const [searchValue, setSearchValue] = useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    const searchText = searchValue.toLocaleLowerCase();\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const textLower = text.toLocaleLowerCase();\n    const todoIndex = todos.findIndex(todo => todo.text.toLocaleLowerCase() === textLower);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = text => {\n    const textLower = text.toLocaleLowerCase();\n    const todoIndex = todos.findIndex(todo => todo.text.toLocaleLowerCase() === textLower);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      completed: completedTodos,\n      total: totalTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OGMHQXAjvuOGZdqUUooJQ35j+r8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/repos/Nueva carpeta/todo_machine/src/App.js"],"names":["React","useState","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","defaultTodos","text","completed","App","todos","setTodos","searchValue","setSearchValue","completedTodos","filter","todo","length","totalTodos","searchedTodos","searchText","toLocaleLowerCase","todoText","includes","completeTodo","textLower","todoIndex","findIndex","newTodos","deleteTodo","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\n\nimport TodoCounter from './components/TodoCounter';\nimport TodoSearch from './components/TodoSearch';\nimport TodoList from './components/TodoList';\nimport TodoItem from './components/TodoItem';\nimport CreateTodoButton from './components/CreateTodoButton';\n\nconst defaultTodos = [\n  {text: 'Hacer la tarea', completed: true},\n  {text: 'Estudiar para examen', completed: false},\n  {text: 'Trabajar', completed: false},\n];\n\nfunction App() {\n\n  const [todos, setTodos] = useState(defaultTodos);\n  const [searchValue, setSearchValue] = useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if(!searchValue.length >= 1){\n    searchedTodos = todos;\n  }else{\n\n    const searchText = searchValue.toLocaleLowerCase();\n    searchedTodos = todos.filter(todo =>{\n      const todoText = todo.text.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    })\n  }\n\n  const completeTodo = (text)=>{\n    const textLower = text.toLocaleLowerCase();\n    const todoIndex = todos.findIndex(todo => todo.text.toLocaleLowerCase() === textLower);\n    const newTodos =[...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  }\n  \n  const deleteTodo = (text)=>{\n    const textLower = text.toLocaleLowerCase();\n    const todoIndex = todos.findIndex(todo => todo.text.toLocaleLowerCase() === textLower);\n    const newTodos =[...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos);\n  }\n  return (\n    <React.Fragment>\n      <TodoCounter completed = {completedTodos} total= {totalTodos}/>\n      <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue}/>\n      {<TodoList>\n        {searchedTodos.map(todo => (\n          <TodoItem key={todo.text} text={todo.text} completed={todo.completed} onComplete ={()=>completeTodo(todo.text)} />\n        ))}\n        </TodoList>}\n      <CreateTodoButton />\n    </React.Fragment >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}